[{"/home/springboot/employee-app/employeemanagement-frontend/src/index.js":"1","/home/springboot/employee-app/employeemanagement-frontend/src/App.js":"2","/home/springboot/employee-app/employeemanagement-frontend/src/component/FooterComponent.js":"3","/home/springboot/employee-app/employeemanagement-frontend/src/component/AddEmployeeComponent.js":"4","/home/springboot/employee-app/employeemanagement-frontend/src/component/ListEmployeeComponent.js":"5","/home/springboot/employee-app/employeemanagement-frontend/src/component/HeaderComponent.js":"6","/home/springboot/employee-app/employeemanagement-frontend/src/service/EmployeeService.js":"7"},{"size":301,"mtime":1701239512142,"results":"8","hashOfConfig":"9"},{"size":849,"mtime":1701239512142,"results":"10","hashOfConfig":"9"},{"size":284,"mtime":1701239512142,"results":"11","hashOfConfig":"9"},{"size":3796,"mtime":1701239512142,"results":"12","hashOfConfig":"9"},{"size":2046,"mtime":1701239512142,"results":"13","hashOfConfig":"9"},{"size":436,"mtime":1701239512142,"results":"14","hashOfConfig":"9"},{"size":658,"mtime":1701240837705,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fvfn2c",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/home/springboot/employee-app/employeemanagement-frontend/src/index.js",[],[],"/home/springboot/employee-app/employeemanagement-frontend/src/App.js",[],[],"/home/springboot/employee-app/employeemanagement-frontend/src/component/FooterComponent.js",[],[],"/home/springboot/employee-app/employeemanagement-frontend/src/component/AddEmployeeComponent.js",["41","42"],[],"import React, { useState, useEffect } from 'react'\nimport EmployeeService from '../service/EmployeeService';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\n\nconst AddEmployeeComponent = () => {\n    /** Variables and method to collect and store inputes */\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const navigate = useNavigate();\n    const { id } = useParams();\n\n    const employeeData = { firstName, lastName, email }; //bundle the inpute from user\n\n    /**send data to api and navigate when succesful */\n    function saveEmployee(e) {\n        e.preventDefault();\n\n        if (employeeData.firstName !== \"\" && employeeData.lastName !== \"\" && employeeData.email != \"\") {\n            /**If id is present in the parameter, it should update else it should save */\n            if (id) {\n                EmployeeService.updateEmployee(id, employeeData)\n                    .then(navigate(\"/employee\"))\n                    .catch(e => console.log(e));\n            } else {\n                EmployeeService.saveEmployee(employeeData)\n                    .then(navigate(\"/employee\"))\n                    .catch(e => console.log(e));\n            }\n\n        } else {\n            alert(\"Please, fill in all inputes\");\n        }\n    }\n\n    function tile() {\n        if (id) {\n            return \"Update Employee\";\n        } else {\n            return \"Add Employee\";\n        }\n    }\n    useEffect(() => {\n        if (id) {\n            EmployeeService.getEmployeeById(id)\n                .then(res => {\n                    setFirstName(res.data.firstName);\n                    setLastName(res.data.lastName);\n                    setEmail(res.data.email);\n                })\n                .catch(e => console.log(e));\n        }\n    }, []);\n\n    return (\n        <div>\n            <div className='container mt-5'>\n                <div className='row'>\n                    <div className='card col-md-6 offset-md-3'>\n                        <h2 className='text-center'>{tile()}</h2>\n                        <div className='card-body'>\n                            <form>\n                                <div className='form-group mb-2'>\n                                    <input className='form-control'\n                                        value={firstName}\n                                        onChange={(e) => setFirstName(e.target.value)}\n                                        type=\"text\" placeholder='Enter First Name' />\n                                </div>\n                                <div className='form-group mb-2'>\n                                    <input className='form-control'\n                                        value={lastName}\n                                        onChange={(e) => setLastName(e.target.value)}\n                                        type=\"text\" placeholder='Enter Last Name' />\n                                </div>\n                                <div className='form-group mb-2'>\n                                    <input className='form-control'\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                        type=\"email\" placeholder='Enter Email' />\n                                </div>\n                                <button onClick={(e) => saveEmployee(e)} className='btn btn-success'>Save</button> {\" \"}\n                                <Link to={\"/employee\"} className='btn btn-danger' href=\"\">Cancel</Link>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddEmployeeComponent","/home/springboot/employee-app/employeemanagement-frontend/src/component/ListEmployeeComponent.js",["43","44"],[],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport EmployeeService from '../service/EmployeeService';\n\nconst ListEmployeeComponent = () => {\n    const [employeeArray, setEmployeeArray] = useState([]);\n\n    useEffect(() => {\n        getAllEmployee();\n    }, []);\n\n    function getAllEmployee() {\n        EmployeeService.getAllEmployee()\n            .then(res => { setEmployeeArray(res.data); console.log(res) })\n            .catch(e => console.log(e));\n    }\n    function deleteEmployee(e, id) {\n        e.preventDefault()\n        EmployeeService.deleteEmployee(id).then(getAllEmployee()).catch(e => console.log(e));\n    }\n\n\n    return (\n        <div className='container'>\n            <Link to={\"/add-employee\"} className='btn btn-primary mb-2 mt-3' href=\"\">Add Employee</Link>\n            <h2 className='text-center mb-4'>List Employee</h2>\n            <table className='table table-bordered table striped'>\n                <thead>\n                    <th>Employee ID</th>\n                    <th>Employee First Name</th>\n                    <th>Employee Last Name</th>\n                    <th>Employee Email</th>\n                    <th>Actions</th>\n                </thead>\n                <tbody>\n                    {employeeArray.map(employee =>\n                        <tr id={employee.id}>\n                            <td>{employee.id}</td>\n                            <td>{employee.firstName}</td>\n                            <td>{employee.lastName}</td>\n                            <td>{employee.email}</td>\n                            <td>\n                                <Link to={`/add-employee/${employee.id}`} className='btn btn-info' href=\"\">Update</Link> {\" \"}\n                                <a onClick={(e) => deleteEmployee(e, employee.id)} className='btn btn-danger'>Delete</a>\n                            </td>\n                        </tr>)}\n\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default ListEmployeeComponent","/home/springboot/employee-app/employeemanagement-frontend/src/component/HeaderComponent.js",["45"],[],"import React from 'react'\n\nconst HeaderComponent = () => {\n    return (\n        <div>\n            <header>\n                <nav className='navbar navbar-expand-md navbar-dark bg-dark p-3'>\n                    <div>\n                        <a className='navbar-brand m-5' href=\"\">Employee Management System</a>\n                    </div>\n                </nav>\n            </header>\n        </div>\n    )\n}\n\nexport default HeaderComponent","/home/springboot/employee-app/employeemanagement-frontend/src/service/EmployeeService.js",["46"],[],"import axios from \"axios\";\n\nconst BASE_URL = \"http://142.93.113.30:8080/employee\";\nclass EmployeeService{\n\n    //**Method to get all employee from our api or database */\n    getAllEmployee(){\n        return axios.get(BASE_URL);\n    }\n    /**MEthod to save employee */\n    saveEmployee(employeeData){\n        return axios.post(BASE_URL, employeeData);\n    }\n    updateEmployee(id, employeeData){\n        return axios.put(`${BASE_URL}/${id}`, employeeData)\n    }\n    getEmployeeById(id){\n        return axios.get(`${BASE_URL}/${id}`);\n    }\n    deleteEmployee(id){\n        return axios.delete(BASE_URL +\"/\" +id);\n    }\n\n}\nexport default new EmployeeService();\n",{"ruleId":"47","severity":1,"message":"48","line":19,"column":97,"nodeType":"49","messageId":"50","endLine":19,"endColumn":99},{"ruleId":"51","severity":1,"message":"52","line":53,"column":8,"nodeType":"53","endLine":53,"endColumn":10,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"59","severity":1,"message":"60","line":45,"column":33,"nodeType":"61","endLine":45,"endColumn":111},{"ruleId":"59","severity":1,"message":"62","line":9,"column":25,"nodeType":"61","endLine":9,"endColumn":65},{"ruleId":"63","severity":1,"message":"64","line":25,"column":1,"nodeType":"65","endLine":25,"endColumn":38},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["66"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"67","fix":"68"},"Update the dependencies array to be: [id]",{"range":"69","text":"70"},[1846,1848],"[id]"]